<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>kb_knowledge</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>EnrichKnowledgeArticle</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var r = new sn_ws.RESTMessageV2('x_463104_socrates.Enrichment', 'Enrich');
    r.setRequestBody(current.short_description);

    var response = r.execute();
    var responseBody = response.getBody();
    var httpStatus = response.getStatusCode();
    var keywords = JSON.parse(responseBody);
    var keywords_id = [];
	keywords.forEach(function (keyword, index) {
        var preferredName_ = keyword.split(" ").join("_");
        var kb_keyword = new GlideRecord('kb_keyword');
        if (kb_keyword.get('keyword', preferredName_)) {
            gs.info(kb_keyword.keyword + " found in the keywords");
            keywords_id.push(kb_keyword.sys_id);
        } else {
            gs.info(preferredName_ + " not found in the keywords");
        }
    });
    var kb_knowledge_keyword = new GlideRecord('kb_knowledge_keyword');
	if (!kb_knowledge_keyword.get('knowledge', current.sys_id)){
		kb_knowledge_keyword.initialize();
		kb_knowledge_keyword.knowledge = current.sys_id;
		kb_knowledge_keyword.keywords = keywords_id.join();
		kb_knowledge_keyword.insert();
		gs.info("Insert completed");
	}
	else{
		kb_knowledge_keyword.keywords = keywords_id.join();
		kb_knowledge_keyword.update();
		gs.info("Update completed");
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-13 10:56:05</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9fa8a4112fa30010188559a72799b6b0</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>EnrichKnowledgeArticle</sys_name>
        <sys_overrides/>
        <sys_package display_value="Socrates" source="x_463104_socrates">4d2598912f230010188559a72799b6df</sys_package>
        <sys_policy/>
        <sys_scope display_value="Socrates">4d2598912f230010188559a72799b6df</sys_scope>
        <sys_update_name>sys_script_9fa8a4112fa30010188559a72799b6b0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-13 13:40:45</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9fa8a4112fa30010188559a72799b6b0"/>
</record_update>
